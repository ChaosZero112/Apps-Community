#!/bin/bash
#
# Title:      CouchPotato
# Author(s):  Ruud Burger, Clinton Hall, YourHuckleberry, linuxserver
# URL:        http://couchpota.to - https://github.com/CouchPotato/CouchPotatoServer/
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
# CORE (MANDATORY) DO NOT CHANGE ###########################################

    - name: 'Set Known Facts'
      set_fact:
        pgrole: "couchpotato"
        intport: "5050"
        extport: "5050"
        image: "linuxserver/couchpotato:latest"

    - name: 'Including cron job'
      include_tasks: '/opt/communityapps/apps/_core.yml'

# PRE-DEPLOY ############################################################

    - name: Checking for existing app data
      stat:
        path: "/opt/appdata/{{pgrole}}/config.ini"
      register: ccheck

# LABELS ################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}},{{tldset}}'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/opt/appdata/{{pgrole}}:/config'
          - '{{path.stdout}}/unionfs/{{pgrole}}/:/movies'
          - '{{path.stdout}}/downloads/{{pgrole}}/:/downloads'
          - '/etc/localtime:/etc/localtime:ro'
          - '{{path.stdout}}:{{path.stdout}}'
          - '/mnt:/mnt'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: 1000
          PGID: 1000
          

    # MAIN DEPLOYMENT ##############################################################

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'

# CONFIGURATION ###########################################################
    # - name: 'Waiting for {{pgrole}} to initialize'
    #   wait_for:
    #     timeout: 10

    # - name: Stopping {{pgrole}}
    #   docker_container:
    #     name: '{{pgrole}}'
    #     state: stopped

    # - name: 'Configuring {{pgrole}} for first time use'
    #   block:
    #     - name: 'Configure rTorrent'
    #       lineinfile:
    #         path: '/opt/appdata/{{pgrole}}/config.ini'
    #         regexp: '\[rtorrent\]\nusername.*\nrpc_url.*\nmanual.*\nenabled.*\nauthentication.*\nlabel.*\npaused.*\nssl.*\nhost.*'
    #         line: '\[rtorrent\]\nusername =\nrpc_url = RPC2\nmanual = 0\nenabled = 1\nauthentication = basic\nlabel = couchpotato\npaused = False\nssl = 0\nhost = httprpc://rutorrent'
    #         state: present
        
    #     - name: 'Setting up plex notificaions'
    #       lineinfile:
    #         path: '/opt/appdata/{{pgrole}}/config.ini'
    #         regexp: '\[plex\]\nusername.*\non_snatch.*\nauth_token.*\nclients.*\nenabled.*\nmedia_server.*'
    #         line: '\[plex\]\nusername =\non_snatch = 0\nauth_token =\nclients =\nenabled = 1\nmedia_server = plex:32400'
    #         state: present
    
    #    - name: Setting Movies directory
    #       lineinfile:
    #         path: '/opt/appdata/{{pgrole}}/config.ini'
    #         regexp: '\[manage\]\nstartup_scan.*\nlibrary_refresh_interval.*\ncleanup.*\nenabled.*\nlibrary.*'
    #         line: '\[manage\]\nstartup_scan = True\nlibrary_refresh_interval = 0\ncleanup = True\nenabled = 1\nlibrary = \movies'
    #         state: present

    #   when: not ccheck.stat.exists

    # - name: Restart Docker Container
    #   docker_container:
    #     name: "{{pgrole}}"
    #     state: started